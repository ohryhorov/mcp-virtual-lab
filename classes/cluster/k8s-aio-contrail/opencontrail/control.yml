classes:
- system.linux.system.lowmem
- system.linux.system.repo.cassandra
- system.linux.system.repo.mcp.contrail
- system.linux.system.repo.mcp.openstack
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.saltstack.trusty
- system.opencontrail.client.resource.edge_router
- system.rabbitmq.server.cluster
- system.opencontrail.control.cluster
- system.opencontrail.client.cluster
- system.opencontrail.client.resource.control_node
- system.opencontrail.client.resource.config_node
- system.opencontrail.client.resource.database_node
- system.opencontrail.client.resource.analytics_node
- system.haproxy.proxy.listen.opencontrail.analytics
- cluster.k8s-aio-contrail.infra
parameters:
  _param:
    keepalived_vip_interface: eth1
    cluster_vip_address: ${_param:opencontrail_control_address}
    cluster_local_address: ${_param:single_address}
    cluster_node01_hostname: ${_param:opencontrail_control_node01_hostname}
    cluster_node01_address: ${_param:opencontrail_control_node01_address}
    cluster_node02_hostname: ${_param:opencontrail_control_node02_hostname}
    cluster_node02_address: ${_param:opencontrail_control_node02_address}
    cluster_node03_hostname: ${_param:opencontrail_control_node03_hostname}
    cluster_node03_address: ${_param:opencontrail_control_node03_address}
    rabbitmq_secret_key: password
    rabbitmq_admin_password: password
    opencontrail_router01_hostname: vsrx01.${_param:cluster_domain}
    opencontrail_router01_address: 172.16.10.131
  linux:
    network:
      interface:
        eth1:
          enabled: true
          type: eth
          proto: dhcp
  keepalived:
    cluster:
      instance:
        VIP:
          virtual_router_id: 144
  opencontrail:
    common:
      identity:
        host: none
        engine: k8s
      network:
        engine: k8s
    config:
      network:
        engine: k8s
      identity:
        engine: k8s
        region: none
        host: none
      multi_tenancy: false
      message_queue:
        host: ${_param:opencontrail_control_address}
    web:
      network:
        engine: k8s
      identity:
        engine: k8s
        host: none
  rabbitmq:
    server:
      host:
        '/':
          enabled: true
          user: guest
          password: guest
          policies:
          - name: HA
            pattern: '^(?!amq\.).*'
            definition: '{"ha-mode": "all", "message-ttl": 120000}'
